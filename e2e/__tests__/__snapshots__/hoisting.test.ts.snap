// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "default": io 1`] = `
  ===[ FILE: hello.spec.ts ]======================================================
  "use strict";
  var __importDefault = (this && this.__importDefault) || function (mod) {
      return (mod && mod.__esModule) ? mod : { "default": mod };
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  jest.mock('./hello');
  var hello_1 = __importDefault(require("./hello"));
  afterAll(function () {
      jest.unmock('./hello');
      // this should go after
      var zz = 20;
  });
  describe('hello', function () {
      var original = require.requireActual('./hello').default;
      it('should have been mocked', function () {
          jest.mock('foo', function () { return 'bar'; }, { virtual: true });
          var msg = hello_1.default();
          expect(hello_1.default).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello_1.default).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
      });
  });
  //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiaGVsbG8uc3BlYy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVFBLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFSckIsa0RBQTRCO0FBRTVCLFFBQVEsQ0FBQztJQUdQLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFGdkIsdUJBQXVCO0lBQ3ZCLElBQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQztDQUVmLENBQUMsQ0FBQTtBQUlGLFFBQVEsQ0FBQyxPQUFPLEVBQUU7SUFDaEIsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDMUQsRUFBRSxDQUFDLHlCQUF5QixFQUFFO1FBTTVCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFMakQsSUFBTSxHQUFHLEdBQUcsZUFBSyxFQUFFLENBQUM7UUFDcEIsTUFBTSxDQUFDLGVBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxlQUFLLENBQUMsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUVwQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6Ijxjd2Q+LyIsInNvdXJjZXMiOlsiaGVsbG8uc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGVsbG8gZnJvbSAnLi9oZWxsbyc7XG5cbmFmdGVyQWxsKCgpID0+IHtcbiAgLy8gdGhpcyBzaG91bGQgZ28gYWZ0ZXJcbiAgY29uc3QgenogPSAyMDtcbiAgamVzdC51bm1vY2soJy4vaGVsbG8nKTtcbn0pXG5cbmplc3QubW9jaygnLi9oZWxsbycpO1xuXG5kZXNjcmliZSgnaGVsbG8nLCAoKSA9PiB7XG4gIGNvbnN0IG9yaWdpbmFsID0gcmVxdWlyZS5yZXF1aXJlQWN0dWFsKCcuL2hlbGxvJykuZGVmYXVsdDtcbiAgaXQoJ3Nob3VsZCBoYXZlIGJlZW4gbW9ja2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IG1zZyA9IGhlbGxvKCk7XG4gICAgZXhwZWN0KGhlbGxvKS5ub3QudG9CZShvcmlnaW5hbCk7XG4gICAgZXhwZWN0KG1zZykudG9CZVVuZGVmaW5lZCgpO1xuICAgIGV4cGVjdChoZWxsbykudG9IYXZlUHJvcGVydHkoJ21vY2snKTtcbiAgICBleHBlY3QocmVxdWlyZSgnZm9vJykpLnRvQmUoJ2JhcicpO1xuICAgIGplc3QubW9jaygnZm9vJywgKCkgPT4gJ2JhcicsIHsgdmlydHVhbDogdHJ1ZSB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==
  ===[ INLINE SOURCE MAPS ]=======================================================
  file: hello.spec.ts
  mappings: >-
    ;;;;;AAQA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AARrB,kDAA4B;AAE5B,QAAQ,CAAC;IAGP,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAFvB,uBAAuB;IACvB,IAAM,EAAE,GAAG,EAAE,CAAC;CAEf,CAAC,CAAA;AAIF,QAAQ,CAAC,OAAO,EAAE;IAChB,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;IAC1D,EAAE,CAAC,yBAAyB,EAAE;QAM5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QALjD,IAAM,GAAG,GAAG,eAAK,EAAE,CAAC;QACpB,MAAM,CAAC,eAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;QAC5B,MAAM,CAAC,eAAK,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAEpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC
  names: []
  sourceRoot: <cwd>/
  sources:
    - hello.spec.ts
  sourcesContent:
    - |
      import hello from './hello';
  
      afterAll(() => {
        // this should go after
        const zz = 20;
        jest.unmock('./hello');
      })
  
      jest.mock('./hello');
  
      describe('hello', () => {
        const original = require.requireActual('./hello').default;
        it('should have been mocked', () => {
          const msg = hello();
          expect(hello).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
          jest.mock('foo', () => 'bar', { virtual: true });
        });
      });
  version: 3
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "default": output 1`] = `
  √ jest
  ↳ exit code: 0
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./hello.spec.ts
    hello
      √ should have been mocked
  
  Test Suites: 1 passed, 1 total
  Tests:       1 passed, 1 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-babel-6": io 1`] = `
  ===[ FILE: hello.spec.ts ]======================================================
  "use strict";
  
  jest.mock('./hello');
  var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
  };
  Object.defineProperty(exports, "__esModule", { value: true });var hello_1 = __importDefault(require("./hello"));
  afterAll(function () {
      jest.unmock('./hello');
      // this should go after
      var zz = 20;
  });
  describe('hello', function () {
      var original = require.requireActual('./hello').default;
      it('should have been mocked', function () {
          jest.mock('foo', function () {
              return 'bar';
          }, { virtual: true });
          var msg = hello_1.default();
          expect(hello_1.default).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello_1.default).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
      });
  });
  //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJtYXBwaW5ncyI6Ijs7QUFRQSxLQUFLLElBQUwsQ0FBVSxTQUFWOzs7OzhEQVJBLElBQUEsVUFBQSxnQkFBQSxRQUFBLFNBQUEsQ0FBQSxDQUFBO0FBRUEsU0FBUyxZQUFBO0FBR1AsU0FBSyxNQUFMLENBQVksU0FBWjtBQUZBO0FBQ0EsUUFBTSxLQUFLLEVBQVg7QUFFRCxDQUpEO0FBUUEsU0FBUyxPQUFULEVBQWtCLFlBQUE7QUFDaEIsUUFBTSxXQUFXLFFBQVEsYUFBUixDQUFzQixTQUF0QixFQUFpQyxPQUFsRDtBQUNBLE9BQUcseUJBQUgsRUFBOEIsWUFBQTtBQU01QixhQUFLLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFlBQUE7QUFBTSxtQkFBQSxLQUFBO0FBQUssU0FBNUIsRUFBOEIsRUFBRSxTQUFTLElBQVgsRUFBOUI7QUFMQSxZQUFNLE1BQU0sUUFBQSxPQUFBLEVBQVo7QUFDQSxlQUFPLFFBQUEsT0FBUCxFQUFjLEdBQWQsQ0FBa0IsSUFBbEIsQ0FBdUIsUUFBdkI7QUFDQSxlQUFPLEdBQVAsRUFBWSxhQUFaO0FBQ0EsZUFBTyxRQUFBLE9BQVAsRUFBYyxjQUFkLENBQTZCLE1BQTdCO0FBQ0EsZUFBTyxRQUFRLEtBQVIsQ0FBUCxFQUF1QixJQUF2QixDQUE0QixLQUE1QjtBQUVELEtBUEQ7QUFRRCxDQVZEIiwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiPGN3ZD4vIiwic291cmNlcyI6WyJoZWxsby5zcGVjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoZWxsbyBmcm9tICcuL2hlbGxvJztcblxuYWZ0ZXJBbGwoKCkgPT4ge1xuICAvLyB0aGlzIHNob3VsZCBnbyBhZnRlclxuICBjb25zdCB6eiA9IDIwO1xuICBqZXN0LnVubW9jaygnLi9oZWxsbycpO1xufSlcblxuamVzdC5tb2NrKCcuL2hlbGxvJyk7XG5cbmRlc2NyaWJlKCdoZWxsbycsICgpID0+IHtcbiAgY29uc3Qgb3JpZ2luYWwgPSByZXF1aXJlLnJlcXVpcmVBY3R1YWwoJy4vaGVsbG8nKS5kZWZhdWx0O1xuICBpdCgnc2hvdWxkIGhhdmUgYmVlbiBtb2NrZWQnLCAoKSA9PiB7XG4gICAgY29uc3QgbXNnID0gaGVsbG8oKTtcbiAgICBleHBlY3QoaGVsbG8pLm5vdC50b0JlKG9yaWdpbmFsKTtcbiAgICBleHBlY3QobXNnKS50b0JlVW5kZWZpbmVkKCk7XG4gICAgZXhwZWN0KGhlbGxvKS50b0hhdmVQcm9wZXJ0eSgnbW9jaycpO1xuICAgIGV4cGVjdChyZXF1aXJlKCdmb28nKSkudG9CZSgnYmFyJyk7XG4gICAgamVzdC5tb2NrKCdmb28nLCAoKSA9PiAnYmFyJywgeyB2aXJ0dWFsOiB0cnVlIH0pO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9
  ===[ INLINE SOURCE MAPS ]=======================================================
  mappings: >-
    ;;AAQA,KAAK,IAAL,CAAU,SAAV;;;;8DARA,IAAA,UAAA,gBAAA,QAAA,SAAA,CAAA,CAAA;AAEA,SAAS,YAAA;AAGP,SAAK,MAAL,CAAY,SAAZ;AAFA;AACA,QAAM,KAAK,EAAX;AAED,CAJD;AAQA,SAAS,OAAT,EAAkB,YAAA;AAChB,QAAM,WAAW,QAAQ,aAAR,CAAsB,SAAtB,EAAiC,OAAlD;AACA,OAAG,yBAAH,EAA8B,YAAA;AAM5B,aAAK,IAAL,CAAU,KAAV,EAAiB,YAAA;AAAM,mBAAA,KAAA;AAAK,SAA5B,EAA8B,EAAE,SAAS,IAAX,EAA9B;AALA,YAAM,MAAM,QAAA,OAAA,EAAZ;AACA,eAAO,QAAA,OAAP,EAAc,GAAd,CAAkB,IAAlB,CAAuB,QAAvB;AACA,eAAO,GAAP,EAAY,aAAZ;AACA,eAAO,QAAA,OAAP,EAAc,cAAd,CAA6B,MAA7B;AACA,eAAO,QAAQ,KAAR,CAAP,EAAuB,IAAvB,CAA4B,KAA5B;AAED,KAPD;AAQD,CAVD
  names: []
  sourceRoot: <cwd>/
  sources:
    - hello.spec.ts
  sourcesContent:
    - |
      import hello from './hello';
  
      afterAll(() => {
        // this should go after
        const zz = 20;
        jest.unmock('./hello');
      })
  
      jest.mock('./hello');
  
      describe('hello', () => {
        const original = require.requireActual('./hello').default;
        it('should have been mocked', () => {
          const msg = hello();
          expect(hello).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
          jest.mock('foo', () => 'bar', { virtual: true });
        });
      });
  version: 3
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-babel-6": output 1`] = `
  √ jest
  ↳ exit code: 0
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./hello.spec.ts
    hello
      √ should have been mocked
  
  Test Suites: 1 passed, 1 total
  Tests:       1 passed, 1 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-babel-7": io 1`] = `
  ===[ FILE: hello.spec.ts ]======================================================
  "use strict";
  
  jest.mock('./hello');
  
  var __importDefault = this && this.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : {
      "default": mod
    };
  };
  
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  
  var hello_1 = __importDefault(require("./hello"));
  
  afterAll(function () {
    jest.unmock('./hello'); // this should go after
  
    var zz = 20;
  });
  describe('hello', function () {
    var original = require.requireActual('./hello').default;
  
    it('should have been mocked', function () {
      jest.mock('foo', function () {
        return 'bar';
      }, {
        virtual: true
      });
      var msg = hello_1.default();
      expect(hello_1.default).not.toBe(original);
      expect(msg).toBeUndefined();
      expect(hello_1.default).toHaveProperty('mock');
      expect(require('foo')).toBe('bar');
    });
  });
  //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJtYXBwaW5ncyI6Ijs7QUFRQSxJQUFJLENBQUMsSUFBTCxDQUFVLFNBQVY7Ozs7Ozs7Ozs7OztBQVJBLElBQUEsT0FBQSxHQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsU0FBQSxDQUFBLENBQUE7O0FBRUEsUUFBUSxDQUFDLFlBQUE7QUFHUCxFQUFBLElBQUksQ0FBQyxNQUFMLENBQVksU0FBWixFQUhPLENBQ1A7O0FBQ0EsTUFBTSxFQUFFLEdBQUcsRUFBWDtBQUVELENBSk8sQ0FBUjtBQVFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsWUFBQTtBQUNoQixNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsYUFBUixDQUFzQixTQUF0QixFQUFpQyxPQUFsRDs7QUFDQSxFQUFBLEVBQUUsQ0FBQyx5QkFBRCxFQUE0QixZQUFBO0FBTTVCLElBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWLEVBQWlCLFlBQUE7QUFBTSxhQUFBLEtBQUE7QUFBSyxLQUE1QixFQUE4QjtBQUFFLE1BQUEsT0FBTyxFQUFFO0FBQVgsS0FBOUI7QUFMQSxRQUFNLEdBQUcsR0FBRyxPQUFBLENBQUEsT0FBQSxFQUFaO0FBQ0EsSUFBQSxNQUFNLENBQUMsT0FBQSxDQUFBLE9BQUQsQ0FBTixDQUFjLEdBQWQsQ0FBa0IsSUFBbEIsQ0FBdUIsUUFBdkI7QUFDQSxJQUFBLE1BQU0sQ0FBQyxHQUFELENBQU4sQ0FBWSxhQUFaO0FBQ0EsSUFBQSxNQUFNLENBQUMsT0FBQSxDQUFBLE9BQUQsQ0FBTixDQUFjLGNBQWQsQ0FBNkIsTUFBN0I7QUFDQSxJQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBRCxDQUFSLENBQU4sQ0FBdUIsSUFBdkIsQ0FBNEIsS0FBNUI7QUFFRCxHQVBDLENBQUY7QUFRRCxDQVZPLENBQVIiLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiI8Y3dkPi8iLCJzb3VyY2VzIjpbImhlbGxvLnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGhlbGxvIGZyb20gJy4vaGVsbG8nO1xuXG5hZnRlckFsbCgoKSA9PiB7XG4gIC8vIHRoaXMgc2hvdWxkIGdvIGFmdGVyXG4gIGNvbnN0IHp6ID0gMjA7XG4gIGplc3QudW5tb2NrKCcuL2hlbGxvJyk7XG59KVxuXG5qZXN0Lm1vY2soJy4vaGVsbG8nKTtcblxuZGVzY3JpYmUoJ2hlbGxvJywgKCkgPT4ge1xuICBjb25zdCBvcmlnaW5hbCA9IHJlcXVpcmUucmVxdWlyZUFjdHVhbCgnLi9oZWxsbycpLmRlZmF1bHQ7XG4gIGl0KCdzaG91bGQgaGF2ZSBiZWVuIG1vY2tlZCcsICgpID0+IHtcbiAgICBjb25zdCBtc2cgPSBoZWxsbygpO1xuICAgIGV4cGVjdChoZWxsbykubm90LnRvQmUob3JpZ2luYWwpO1xuICAgIGV4cGVjdChtc2cpLnRvQmVVbmRlZmluZWQoKTtcbiAgICBleHBlY3QoaGVsbG8pLnRvSGF2ZVByb3BlcnR5KCdtb2NrJyk7XG4gICAgZXhwZWN0KHJlcXVpcmUoJ2ZvbycpKS50b0JlKCdiYXInKTtcbiAgICBqZXN0Lm1vY2soJ2ZvbycsICgpID0+ICdiYXInLCB7IHZpcnR1YWw6IHRydWUgfSk7XG4gIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=
  ===[ INLINE SOURCE MAPS ]=======================================================
  mappings: >-
    ;;AAQA,IAAI,CAAC,IAAL,CAAU,SAAV;;;;;;;;;;;;AARA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,QAAQ,CAAC,YAAA;AAGP,EAAA,IAAI,CAAC,MAAL,CAAY,SAAZ,EAHO,CACP;;AACA,MAAM,EAAE,GAAG,EAAX;AAED,CAJO,CAAR;AAQA,QAAQ,CAAC,OAAD,EAAU,YAAA;AAChB,MAAM,QAAQ,GAAG,OAAO,CAAC,aAAR,CAAsB,SAAtB,EAAiC,OAAlD;;AACA,EAAA,EAAE,CAAC,yBAAD,EAA4B,YAAA;AAM5B,IAAA,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,YAAA;AAAM,aAAA,KAAA;AAAK,KAA5B,EAA8B;AAAE,MAAA,OAAO,EAAE;AAAX,KAA9B;AALA,QAAM,GAAG,GAAG,OAAA,CAAA,OAAA,EAAZ;AACA,IAAA,MAAM,CAAC,OAAA,CAAA,OAAD,CAAN,CAAc,GAAd,CAAkB,IAAlB,CAAuB,QAAvB;AACA,IAAA,MAAM,CAAC,GAAD,CAAN,CAAY,aAAZ;AACA,IAAA,MAAM,CAAC,OAAA,CAAA,OAAD,CAAN,CAAc,cAAd,CAA6B,MAA7B;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,KAAD,CAAR,CAAN,CAAuB,IAAvB,CAA4B,KAA5B;AAED,GAPC,CAAF;AAQD,CAVO,CAAR
  names: []
  sourceRoot: <cwd>/
  sources:
    - hello.spec.ts
  sourcesContent:
    - |
      import hello from './hello';
  
      afterAll(() => {
        // this should go after
        const zz = 20;
        jest.unmock('./hello');
      })
  
      jest.mock('./hello');
  
      describe('hello', () => {
        const original = require.requireActual('./hello').default;
        it('should have been mocked', () => {
          const msg = hello();
          expect(hello).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
          jest.mock('foo', () => 'bar', { virtual: true });
        });
      });
  version: 3
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-babel-7": output 1`] = `
  √ jest
  ↳ exit code: 0
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./hello.spec.ts
    hello
      √ should have been mocked
  
  Test Suites: 1 passed, 1 total
  Tests:       1 passed, 1 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-jest-22": io 1`] = `
  ===[ FILE: hello.spec.ts ]======================================================
  "use strict";
  var __importDefault = (this && this.__importDefault) || function (mod) {
      return (mod && mod.__esModule) ? mod : { "default": mod };
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  jest.mock('./hello');
  var hello_1 = __importDefault(require("./hello"));
  afterAll(function () {
      jest.unmock('./hello');
      // this should go after
      var zz = 20;
  });
  describe('hello', function () {
      var original = require.requireActual('./hello').default;
      it('should have been mocked', function () {
          jest.mock('foo', function () { return 'bar'; }, { virtual: true });
          var msg = hello_1.default();
          expect(hello_1.default).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello_1.default).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
      });
  });
  //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiaGVsbG8uc3BlYy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVFBLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFSckIsa0RBQTRCO0FBRTVCLFFBQVEsQ0FBQztJQUdQLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFGdkIsdUJBQXVCO0lBQ3ZCLElBQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQztDQUVmLENBQUMsQ0FBQTtBQUlGLFFBQVEsQ0FBQyxPQUFPLEVBQUU7SUFDaEIsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDMUQsRUFBRSxDQUFDLHlCQUF5QixFQUFFO1FBTTVCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFMakQsSUFBTSxHQUFHLEdBQUcsZUFBSyxFQUFFLENBQUM7UUFDcEIsTUFBTSxDQUFDLGVBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxlQUFLLENBQUMsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUVwQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6Ijxjd2Q+LyIsInNvdXJjZXMiOlsiaGVsbG8uc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGVsbG8gZnJvbSAnLi9oZWxsbyc7XG5cbmFmdGVyQWxsKCgpID0+IHtcbiAgLy8gdGhpcyBzaG91bGQgZ28gYWZ0ZXJcbiAgY29uc3QgenogPSAyMDtcbiAgamVzdC51bm1vY2soJy4vaGVsbG8nKTtcbn0pXG5cbmplc3QubW9jaygnLi9oZWxsbycpO1xuXG5kZXNjcmliZSgnaGVsbG8nLCAoKSA9PiB7XG4gIGNvbnN0IG9yaWdpbmFsID0gcmVxdWlyZS5yZXF1aXJlQWN0dWFsKCcuL2hlbGxvJykuZGVmYXVsdDtcbiAgaXQoJ3Nob3VsZCBoYXZlIGJlZW4gbW9ja2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IG1zZyA9IGhlbGxvKCk7XG4gICAgZXhwZWN0KGhlbGxvKS5ub3QudG9CZShvcmlnaW5hbCk7XG4gICAgZXhwZWN0KG1zZykudG9CZVVuZGVmaW5lZCgpO1xuICAgIGV4cGVjdChoZWxsbykudG9IYXZlUHJvcGVydHkoJ21vY2snKTtcbiAgICBleHBlY3QocmVxdWlyZSgnZm9vJykpLnRvQmUoJ2JhcicpO1xuICAgIGplc3QubW9jaygnZm9vJywgKCkgPT4gJ2JhcicsIHsgdmlydHVhbDogdHJ1ZSB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==
  ===[ INLINE SOURCE MAPS ]=======================================================
  file: hello.spec.ts
  mappings: >-
    ;;;;;AAQA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AARrB,kDAA4B;AAE5B,QAAQ,CAAC;IAGP,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAFvB,uBAAuB;IACvB,IAAM,EAAE,GAAG,EAAE,CAAC;CAEf,CAAC,CAAA;AAIF,QAAQ,CAAC,OAAO,EAAE;IAChB,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;IAC1D,EAAE,CAAC,yBAAyB,EAAE;QAM5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QALjD,IAAM,GAAG,GAAG,eAAK,EAAE,CAAC;QACpB,MAAM,CAAC,eAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;QAC5B,MAAM,CAAC,eAAK,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAEpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC
  names: []
  sourceRoot: <cwd>/
  sources:
    - hello.spec.ts
  sourcesContent:
    - |
      import hello from './hello';
  
      afterAll(() => {
        // this should go after
        const zz = 20;
        jest.unmock('./hello');
      })
  
      jest.mock('./hello');
  
      describe('hello', () => {
        const original = require.requireActual('./hello').default;
        it('should have been mocked', () => {
          const msg = hello();
          expect(hello).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
          jest.mock('foo', () => 'bar', { virtual: true });
        });
      });
  version: 3
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-jest-22": output 1`] = `
  √ jest
  ↳ exit code: 0
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./hello.spec.ts
    hello
      √ should have been mocked
  
  Test Suites: 1 passed, 1 total
  Tests:       1 passed, 1 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-typescript-2-7": io 1`] = `
  ===[ FILE: hello.spec.ts ]======================================================
  "use strict";
  var __importDefault = (this && this.__importDefault) || function (mod) {
      return (mod && mod.__esModule) ? mod : { "default": mod };
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  jest.mock('./hello');
  var hello_1 = __importDefault(require("./hello"));
  afterAll(function () {
      jest.unmock('./hello');
      // this should go after
      var zz = 20;
  });
  describe('hello', function () {
      var original = require.requireActual('./hello').default;
      it('should have been mocked', function () {
          jest.mock('foo', function () { return 'bar'; }, { virtual: true });
          var msg = hello_1.default();
          expect(hello_1.default).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello_1.default).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
      });
  });
  //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiaGVsbG8uc3BlYy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVFBLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFSckIsa0RBQTRCO0FBRTVCLFFBQVEsQ0FBQztJQUdQLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFGdkIsdUJBQXVCO0lBQ3ZCLElBQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQztDQUVmLENBQUMsQ0FBQTtBQUlGLFFBQVEsQ0FBQyxPQUFPLEVBQUU7SUFDaEIsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDMUQsRUFBRSxDQUFDLHlCQUF5QixFQUFFO1FBTTVCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFMakQsSUFBTSxHQUFHLEdBQUcsZUFBSyxFQUFFLENBQUM7UUFDcEIsTUFBTSxDQUFDLGVBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxlQUFLLENBQUMsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUVwQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6Ijxjd2Q+LyIsInNvdXJjZXMiOlsiaGVsbG8uc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGVsbG8gZnJvbSAnLi9oZWxsbyc7XG5cbmFmdGVyQWxsKCgpID0+IHtcbiAgLy8gdGhpcyBzaG91bGQgZ28gYWZ0ZXJcbiAgY29uc3QgenogPSAyMDtcbiAgamVzdC51bm1vY2soJy4vaGVsbG8nKTtcbn0pXG5cbmplc3QubW9jaygnLi9oZWxsbycpO1xuXG5kZXNjcmliZSgnaGVsbG8nLCAoKSA9PiB7XG4gIGNvbnN0IG9yaWdpbmFsID0gcmVxdWlyZS5yZXF1aXJlQWN0dWFsKCcuL2hlbGxvJykuZGVmYXVsdDtcbiAgaXQoJ3Nob3VsZCBoYXZlIGJlZW4gbW9ja2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IG1zZyA9IGhlbGxvKCk7XG4gICAgZXhwZWN0KGhlbGxvKS5ub3QudG9CZShvcmlnaW5hbCk7XG4gICAgZXhwZWN0KG1zZykudG9CZVVuZGVmaW5lZCgpO1xuICAgIGV4cGVjdChoZWxsbykudG9IYXZlUHJvcGVydHkoJ21vY2snKTtcbiAgICBleHBlY3QocmVxdWlyZSgnZm9vJykpLnRvQmUoJ2JhcicpO1xuICAgIGplc3QubW9jaygnZm9vJywgKCkgPT4gJ2JhcicsIHsgdmlydHVhbDogdHJ1ZSB9KTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==
  ===[ INLINE SOURCE MAPS ]=======================================================
  file: hello.spec.ts
  mappings: >-
    ;;;;;AAQA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AARrB,kDAA4B;AAE5B,QAAQ,CAAC;IAGP,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAFvB,uBAAuB;IACvB,IAAM,EAAE,GAAG,EAAE,CAAC;CAEf,CAAC,CAAA;AAIF,QAAQ,CAAC,OAAO,EAAE;IAChB,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;IAC1D,EAAE,CAAC,yBAAyB,EAAE;QAM5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QALjD,IAAM,GAAG,GAAG,eAAK,EAAE,CAAC;QACpB,MAAM,CAAC,eAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;QAC5B,MAAM,CAAC,eAAK,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAEpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC
  names: []
  sourceRoot: <cwd>/
  sources:
    - hello.spec.ts
  sourcesContent:
    - |
      import hello from './hello';
  
      afterAll(() => {
        // this should go after
        const zz = 20;
        jest.unmock('./hello');
      })
  
      jest.mock('./hello');
  
      describe('hello', () => {
        const original = require.requireActual('./hello').default;
        it('should have been mocked', () => {
          const msg = hello();
          expect(hello).not.toBe(original);
          expect(msg).toBeUndefined();
          expect(hello).toHaveProperty('mock');
          expect(require('foo')).toBe('bar');
          jest.mock('foo', () => 'bar', { virtual: true });
        });
      });
  version: 3
  ================================================================================
`;

exports[`Hoisting jest.mock() & jest.unmock() should pass using template "with-typescript-2-7": output 1`] = `
  √ jest
  ↳ exit code: 0
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./hello.spec.ts
    hello
      √ should have been mocked
  
  Test Suites: 1 passed, 1 total
  Tests:       1 passed, 1 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;
